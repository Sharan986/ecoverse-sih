// Direct Gemini API integration for frontend
const GEMINI_API_KEY = import.meta.env.VITE_GEMINI_API_KEY || 'AIzaSyBgDd9hQZp_Mn3z0q98QuyFSpMVZDihYwE';
const GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${GEMINI_API_KEY}`;

export interface ItineraryPayload {
  budget: number;
  startDate: string;
  duration: number;
  homePlace: string;
  transport: 'car' | 'train' | 'flight' | 'bus';
  arrival: string;
  preferredDestinations: string[];
}

export async function generateItineraryWithGemini(payload: ItineraryPayload): Promise<{ success: boolean; plan?: string; error?: string }> {
  try {
    const promptText = `
You are a professional travel planner for Jharkhand tourism.
Generate a detailed day-by-day itinerary in markdown format for the given traveler:

**Travel Details:**
- Budget: â‚¹${payload.budget}
- Start Date: ${payload.startDate}
- Duration: ${payload.duration} days
- Home Place: ${payload.homePlace}
- Transport: ${payload.transport}
- Arrival: ${payload.arrival}
- Preferred Destinations: ${payload.preferredDestinations.join(', ')}

**Format requirements:**
- Start with transport advice (train/flight costs from ${payload.homePlace} to Jharkhand).
- Mention accommodation options and approximate nightly cost.
- Provide a **day-by-day plan** (Day 1, Day 2, ...).
- For each day include key activities, locations, travel details.
- End with an **Estimated Cost Breakdown table** (Travel, Stay, Food, Local Transport, Sightseeing).
- Add **safety/seasonal notes** if relevant.
- Keep it clear and engaging, like a travel guide.
- Focus on Jharkhand's unique attractions like Betla National Park, Ranchi Hill, Hundru Falls, Netarhat, etc.
`;

    const response = await fetch(GEMINI_API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        contents: [
          {
            parts: [{ text: promptText }]
          }
        ]
      })
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();

    // Check for API errors
    if (data.error) {
      console.error('Gemini API error:', data.error);
      return { success: false, error: `AI Error: ${data.error.message || 'Unknown API error'}` };
    }

    // Extract the generated text
    const generatedText = data.candidates?.[0]?.content?.parts?.[0]?.text;

    if (!generatedText) {
      console.warn('No content generated by Gemini API');
      return { success: false, error: 'No itinerary could be generated. Please try again with different preferences.' };
    }

    return { success: true, plan: generatedText };

  } catch (error) {
    console.error('Error calling Gemini API:', error);
    
    if (error instanceof TypeError && error.message.includes('fetch')) {
      return { success: false, error: 'Network error. Please check your internet connection.' };
    }
    
    return { success: false, error: 'Failed to generate itinerary. Please try again.' };
  }
}

export async function chatWithGemini(message: string, context?: string): Promise<{ success: boolean; response?: string; error?: string }> {
  try {
    const promptText = context 
      ? `Context: ${context}\n\nUser question: ${message}\n\nPlease answer the user's question about their Jharkhand travel itinerary.`
      : `You are a helpful travel assistant for Jharkhand tourism. Answer this question: ${message}`;

    const response = await fetch(GEMINI_API_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        contents: [
          {
            parts: [{ text: promptText }]
          }
        ]
      })
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();

    if (data.error) {
      return { success: false, error: `AI Error: ${data.error.message || 'Unknown error'}` };
    }

    const responseText = data.candidates?.[0]?.content?.parts?.[0]?.text;

    if (!responseText) {
      return { success: false, error: 'No response generated.' };
    }

    return { success: true, response: responseText };

  } catch (error) {
    console.error('Error in chat with Gemini:', error);
    return { success: false, error: 'Failed to get AI response.' };
  }
}
